@model RacetrackReservations.ViewModels.LoginViewModel

@{
    ViewBag.Title = "Log in";
}

<h2>Log in</h2>

@using (Html.BeginForm("Login", "Account", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(model => model.Email)
        @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password)
        @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
    </div>

    <br />
    <button type="submit" class="btn btn-primary">Log in</button>

    <div class="mt-3">
        <p>Don't have an account? Register now!</p>
        <a href="/Account/Register" class="btn btn-success">Register</a>
    </div>
}

<div class="text-danger">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @if (!string.IsNullOrEmpty(ViewData["CustomError"] as string))
    {
        <p>@ViewData["CustomError"]</p>
    }
</div>
